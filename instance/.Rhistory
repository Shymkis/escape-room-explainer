371/97
nrow(puzzle_stats.filtered.practice) / nrow(puzzle_stats.practice)
nrow(puzzle_stats.filtered.testing) / nrow(puzzle_stats.testing)
nrow(puzzle_stats.filtered.practice)
nrow(puzzle_stats.filtered.testing)
puzzle_stats.filtered.practice %>% distinct(mturk_id) %>% nrow()
puzzle_stats.filtered.testing %>% distinct(mturk_id) %>% nrow()
puzzle_stats$protocol.user %>% table()
puzzle_stats.practice$protocol.user %>% table()
puzzle_stats.practice$protocol.user %>% table()
puzzle_stats.testing$protocol.user %>% table()
puzzle_stats.filtered.practice$protocol.user %>% table()
puzzle_stats.filtered.testing$protocol.user %>% table()
puzzle_stats.filtered.practice$protocol.user %>% distinct() %>% table()
puzzle_stats %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% table()
puzzle_stats %>% group_by(mturk_id, protocol.user) %>% summarize(n=n())
puzzle_stats %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% select(protocol.user) %>% table()
puzzle_stats %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% select(protocol.user) %>% ungrou() %>% table()
puzzle_stats %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% select(protocol.user) %>% ungroup() %>% table()
puzzle_stats %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% ungroup() %>% select(protocol.user) %>% table()
puzzle_stats.practice %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% ungroup() %>% select(protocol.user) %>% table()
puzzle_stats.testing %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% ungroup() %>% select(protocol.user) %>% table()
puzzle_stats.filtered.practice %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% ungroup() %>% select(protocol.user) %>% table()
puzzle_stats.filtered.testing %>% group_by(mturk_id, protocol.user) %>% summarize(n=n()) %>% ungroup() %>% select(protocol.user) %>% table()
# Data wrangling
protocol_users <- users %>% filter(!is.na(protocol))
# Data filtering
protocol_users %>% select(bonus_comp) %>% unlist() %>% hist()
protocol_users.bonus <- protocol_users %>% filter(bonus_comp > 0)
protocol_users.bonus %>% select(bonus_comp) %>% unlist() %>% hist()
nrow(protocol_users.bonus) / nrow(protocol_users)
# Box plots
protocol_users %>% ggplot(aes(x = protocol, y = bonus_comp)) + geom_boxplot()
protocol_users.bonus %>% ggplot(aes(x = protocol, y = bonus_comp)) + geom_boxplot()
# Tests
anova.bonus_comp.all <- aov(bonus_comp ~ protocol, data = protocol_users)
anova.bonus_comp.few <- aov(bonus_comp ~ protocol, data = protocol_users.bonus)
tukey.bonus_comp.all <- TukeyHSD(anova.bonus_comp.all)
tukey.bonus_comp.few <- TukeyHSD(anova.bonus_comp.few)
# Stats
anova.bonus_comp.all %>% summary()
anova.bonus_comp.few %>% summary()
tukey.bonus_comp.all
tukey.bonus_comp.few
tukey.bonus_comp.all %>% plot()
title(main = "bonus compensation (all)", line = 1)
tukey.bonus_comp.few %>% plot()
title(main = "bonus compensation (few)", line = 1)
analyze.final_surveys <- function(metric) {
metric.data <- final_surveys %>%
mutate(metric = rowSums(select(., starts_with(metric)))/3) %>%
inner_join(users, join_by(mturk_id))
if (metric == "exp.power") {
metric.data <- metric.data %>% filter(protocol != "none")
}
# ANOVA
a <- aov(metric ~ protocol, data = metric.data)
a %>% summary() %>% print()
# Tukey's HSD
a.thsd <- a %>% TukeyHSD()
a.thsd %>% print()
a.thsd %>% plot()
title(main = metric, line = 1)
# Box plots
metric.data %>% ggplot(aes(x = protocol, y = metric)) +
geom_boxplot() +
ylab(metric)
}
analyze.final_surveys("sat.outcome")
analyze.final_surveys("sat.agent")
analyze.final_surveys("exp.power")
analyze.final_surveys <- function(metric) {
metric.data <- final_surveys %>%
mutate(metric = rowSums(select(., starts_with(metric)))/3) %>%
inner_join(users, join_by(mturk_id))
if (metric == "exp.power") {
metric.data <- metric.data %>% filter(protocol != "none")
}
# ANOVA
a <- aov(metric ~ protocol, data = metric.data)
a %>% summary() %>% print()
# Tukey's HSD
a.thsd <- a %>% TukeyHSD()
a.thsd %>% print()
a.thsd %>% plot()
title(main = metric, line = 1)
# Box plots
metric.data %>% ggplot(aes(x = protocol, y = metric)) +
geom_boxplot() +
ylab(metric)
}
analyze.final_surveys("sat.outcome")
analyze.final_surveys("sat.agent")
analyze.final_surveys("exp.power")
puzzle_stats %>% ggplot(aes(x = score, fill = section)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
xlim(0,.4) + ylim(0,125) +
ggtitle("Score Distribution") +
theme(legend.position = c(.75,.75))
puzzle_stats.filtered %>% ggplot(aes(x = score, fill = section)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
xlim(0,.4) + ylim(0,125) +
ggtitle("Filtered Score Distribution") +
theme(legend.position = c(.75,.75))
# Box plots
puzzle_stats.filtered.practice %>% ggplot(aes(x = protocol.user, y = score)) + geom_boxplot() + ylim(0,.4) + ggtitle("Filtered Practice Score Distribution by Protocol")
puzzle_stats.filtered.testing %>% ggplot(aes(x = protocol.user, y = score)) + geom_boxplot() + ylim(0,.4) + ggtitle("Filtered Testing Score Distribution by Protocol")
# Tests
anova.score.few.practice <- aov(score ~ protocol.user, data = puzzle_stats.filtered.practice)
tukey.score.few.practice <- TukeyHSD(anova.score.few.practice)
anova.score.few.testing <- aov(score ~ protocol.user, data = puzzle_stats.filtered.testing)
tukey.score.few.testing <- TukeyHSD(anova.score.few.testing)
# Box plots
puzzle_stats.filtered.practice %>% ggplot(aes(x = protocol.user, y = score)) + geom_boxplot() + ylim(0,.4) + ggtitle("Filtered Practice Score Distribution by Protocol")
puzzle_stats.filtered.testing %>% ggplot(aes(x = protocol.user, y = score)) + geom_boxplot() + ylim(0,.4) + ggtitle("Filtered Testing Score Distribution by Protocol")
# Box plots
puzzle_stats.filtered.practice %>% ggplot(aes(x = protocol.user, y = score, col = protocol.user)) +
geom_boxplot() +
ylim(0,.4) +
ggtitle("Filtered Practice Score Distribution by Protocol")
# Box plots
puzzle_stats.filtered.practice %>% ggplot(aes(x = protocol.user, y = score, fill = protocol.user)) +
geom_boxplot() +
ylim(0,.4) +
ggtitle("Filtered Practice Score Distribution by Protocol")
puzzle_stats.filtered.testing %>% ggplot(aes(x = protocol.user, y = score, fill = protocol.user)) + geom_boxplot() + ylim(0,.4) + ggtitle("Filtered Testing Score Distribution by Protocol")
# Box plots
puzzle_stats.filtered.practice %>% ggplot(aes(x = protocol.user, y = score)) +
geom_boxplot() +
ylim(0,.4) +
ggtitle("Filtered Practice Score Distribution by Protocol")
puzzle_stats.filtered.testing %>% ggplot(aes(x = protocol.user, y = score)) +
geom_boxplot() +
ylim(0,.4) +
ggtitle("Filtered Testing Score Distribution by Protocol")
# Tests
anova.score.few.practice <- aov(score ~ protocol.user, data = puzzle_stats.filtered.practice)
tukey.score.few.practice <- TukeyHSD(anova.score.few.practice)
anova.score.few.testing <- aov(score ~ protocol.user, data = puzzle_stats.filtered.testing)
tukey.score.few.testing <- TukeyHSD(anova.score.few.testing)
# Stats
anova.score.few.practice %>% summary()
tukey.score.few.practice
tukey.score.few.practice %>% plot()
title(main = "Filtered practice scores", line = 1)
anova.score.few.testing %>% summary()
tukey.score.few.testing
tukey.score.few.testing %>% plot()
title(main = "Filtered testing scores", line = 1)
# Data wrangling
protocol_users <- users %>% filter(!is.na(protocol))
# Data filtering
protocol_users %>% select(bonus_comp) %>% unlist() %>% hist()
protocol_users.bonus <- protocol_users %>% filter(bonus_comp > 0)
protocol_users.bonus %>% select(bonus_comp) %>% unlist() %>% hist()
nrow(protocol_users.bonus) / nrow(protocol_users)
# Box plots
protocol_users %>% ggplot(aes(x = protocol, y = bonus_comp)) + geom_boxplot()
protocol_users.bonus %>% ggplot(aes(x = protocol, y = bonus_comp)) + geom_boxplot()
# Tests
anova.bonus_comp.all <- aov(bonus_comp ~ protocol, data = protocol_users)
anova.bonus_comp.few <- aov(bonus_comp ~ protocol, data = protocol_users.bonus)
tukey.bonus_comp.all <- TukeyHSD(anova.bonus_comp.all)
tukey.bonus_comp.few <- TukeyHSD(anova.bonus_comp.few)
# Stats
anova.bonus_comp.all %>% summary()
anova.bonus_comp.few %>% summary()
tukey.bonus_comp.all
tukey.bonus_comp.few
tukey.bonus_comp.all %>% plot()
title(main = "bonus compensation (all)", line = 1)
tukey.bonus_comp.few %>% plot()
title(main = "bonus compensation (few)", line = 1)
analyze.final_surveys <- function(metric) {
metric.data <- final_surveys %>%
mutate(metric = rowSums(select(., starts_with(metric)))/3) %>%
inner_join(users, join_by(mturk_id))
if (metric == "exp.power") {
metric.data <- metric.data %>% filter(protocol != "none")
}
# ANOVA
a <- aov(metric ~ protocol, data = metric.data)
a %>% summary() %>% print()
# Tukey's HSD
a.thsd <- a %>% TukeyHSD()
a.thsd %>% print()
a.thsd %>% plot()
title(main = metric, line = 1)
# Box plots
metric.data %>% ggplot(aes(x = protocol, y = metric)) +
geom_boxplot() +
ylab(metric)
}
# Data wrangling
final_survey.averages <- final_surveys %>%
mutate(
sat.practice = rowSums(select(., starts_with("sat.outcome")))/3,
sat.agent = rowSums(select(., starts_with("sat.agent")))/3,
exp.power = rowSums(select(., starts_with("exp.power")))/3
) %>%
inner_join(users, join_by(mturk_id))
# Data wrangling
final_surveys.averaged <- final_surveys %>%
mutate(
sat.practice = rowSums(select(., starts_with("sat.outcome")))/3,
sat.agent = rowSums(select(., starts_with("sat.agent")))/3,
exp.power = rowSums(select(., starts_with("exp.power")))/3
) %>%
inner_join(users, join_by(mturk_id))
rm(final_survey.averages)
# Data wrangling
final_surveys.averaged <- final_surveys %>%
mutate(
sat.practice = rowSums(select(., starts_with("sat.outcome")))/3,
sat.agent = rowSums(select(., starts_with("sat.agent")))/3,
exp.power = rowSums(select(., starts_with("exp.power")))/3
) %>%
inner_join(users, join_by(mturk_id))
final_surveys.averaged
# Data wrangling
final_surveys.averaged <- final_surveys %>%
mutate(
sat.practice = rowSums(select(., starts_with("sat.outcome")))/3,
sat.agent = rowSums(select(., starts_with("sat.agent")))/3,
exp.power = rowSums(select(., starts_with("exp.power")))/3
) %>%
inner_join(users, join_by(mturk_id)) %>%
select(sat.practice, sat.agent, exp.power)
final_surveys.averaged
# Data wrangling
final_surveys.averaged <- final_surveys %>%
mutate(
sat.practice = rowSums(select(., starts_with("sat.outcome")))/3,
sat.agent = rowSums(select(., starts_with("sat.agent")))/3,
exp.power = rowSums(select(., starts_with("exp.power")))/3
) %>%
inner_join(users, join_by(mturk_id))
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot() +
ylab(metric)
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot()
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.agent)) +
geom_boxplot()
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot()
# Tests
anova.aov(sat.practice ~ protocol, data = final_surveys.averaged)
# Tests
anova.sat.practice <- aov(sat.practice ~ protocol, data = final_surveys.averaged)
anova.sat.agent <- aov(sat.agent ~ protocol, data = final_surveys.averaged)
anova.exp.power <- aov(exp.power ~ protocol, data = final_surveys.averaged)
# Tests
anova.sat.practice <- aov(sat.practice ~ protocol, data = final_surveys.averaged)
anova.sat.agent <- aov(sat.agent ~ protocol, data = final_surveys.averaged)
anova.exp.power <- aov(exp.power ~ protocol, data = final_surveys.averaged %>% filter(protocol != "none"))
# Tests
anova.sat.practice <- aov(sat.practice ~ protocol, data = final_surveys.averaged)
tukey.sat.practice <- TukeyHSD(anova.sat.practice)
anova.sat.agent <- aov(sat.agent ~ protocol, data = final_surveys.averaged)
tukey.sat.agent <- TukeyHSD(anova.sat.agent)
anova.exp.power <- aov(exp.power ~ protocol, data = final_surveys.averaged %>% filter(protocol != "none"))
tukey.exp.power <- TukeyHSD(anova.exp.power)
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
tukey.sat.practice %>% plot()
title(main = "Satisfaction with practice section", line = 1)
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
tukey.sat.practice %>% plot()
title(main = "Satisfaction with practice section", line = 1)
anova.sat.agent %>% summary()
tukey.sat.agent
tukey.sat.agent %>% plot()
title(main = "Satisfaction with agent", line = 1)
anova.exp.power %>% summary()
tukey.exp.power
tukey.exp.power %>% plot()
title(main = "Explanatory power", line = 1)
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
tukey.sat.practice %>% plot()
title(main = "Satisfaction with practice section", line = 1)
anova.sat.agent %>% summary()
tukey.sat.agent
tukey.sat.agent %>% plot()
title(main = "Satisfaction with agent", line = 1)
anova.exp.power %>% summary()
tukey.exp.power
tukey.exp.power %>% plot()
title(main = "Explanatory power", line = 1)
final_surveys.averaged %>% select(protocol)
final_surveys.averaged
final_surveys.averaged %>% select(protocol) %>% print(n=100)
final_surveys.averaged %>% select(protocol) %>% table()
32+35
final_surveys.averaged %>% nrow()
final_surveys %>% nrow()
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot()
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.agent)) +
geom_boxplot()
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot()
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7)
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7)
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.agent)) +
geom_boxplot() +
ylim(1,7)
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot() +
ylim(1,7)
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction of Practice by Protocol")
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Practice by Protocol")
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.agent)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Agent by Protocol")
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Explanatory Power by Protocol")
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Practice by Protocol")
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.agent)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Agent by Protocol")
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Explanatory Power by Protocol")
# Tests
anova.sat.practice <- aov(sat.practice ~ protocol, data = final_surveys.averaged)
tukey.sat.practice <- TukeyHSD(anova.sat.practice)
anova.sat.agent <- aov(sat.agent ~ protocol, data = final_surveys.averaged)
tukey.sat.agent <- TukeyHSD(anova.sat.agent)
anova.exp.power <- aov(exp.power ~ protocol, data = final_surveys.averaged %>% filter(protocol != "none"))
tukey.exp.power <- TukeyHSD(anova.exp.power)
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
tukey.sat.practice %>% plot()
title(main = "Satisfaction with practice section", line = 1)
anova.sat.agent %>% summary()
tukey.sat.agent
tukey.sat.agent %>% plot()
title(main = "Satisfaction with agent", line = 1)
anova.exp.power %>% summary()
tukey.exp.power
tukey.exp.power %>% plot()
title(main = "Explanatory power", line = 1)
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
tukey.sat.practice %>% plot()
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
tukey.sat.practice %>% plot()
title(main = "Satisfaction with practice section", line = 1)
# Tests
anova.sat.practice <- aov(sat.practice ~ protocol, data = final_surveys.averaged)
tukey.sat.practice <- TukeyHSD(anova.sat.practice)
anova.sat.agent <- aov(sat.agent ~ protocol, data = final_surveys.averaged)
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Practice by Protocol")
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.agent)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Agent by Protocol")
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Explanatory Power by Protocol")
# Stats
anova.sat.practice %>% summary()
anova.sat.agent %>% summary()
anova.exp.power %>% summary()
# Stats
anova.sat.practice %>% summary()
tukey.sat.practice
tukey.sat.practice %>% plot()
title(main = "Satisfaction with practice section", line = 1)
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Practice by Protocol")
# Box plots
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.practice)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Practice by Protocol")
final_surveys.averaged %>% ggplot(aes(x = protocol, y = sat.agent)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Satisfaction with Agent by Protocol")
final_surveys.averaged %>% filter(protocol != "none") %>% ggplot(aes(x = protocol, y = exp.power)) +
geom_boxplot() +
ylim(1,7) +
ggtitle("Explanatory Power by Protocol")
final_surveys.averaged$protocol %>% table()
explanations
explanations %>% filter(puzzle_id == 1)
explanations %>% filter(puzzle_id == 6)
explanations %>% filter(puzzle_id == 1)
start_date <- as.POSIXct("2023-09-25")
restart_date <- as.POSIXct("2023-10-01")
rerestart_date <- as.POSIXct("2023-10-05")
table_dfs <- get_table_dfs("application.db")
explanations <- table_dfs$explanation
explanations$protocol <- explanations$protocol %>% ordered(levels=c("none", "placebic", "actionable"))
moves <- table_dfs$move %>% filter(start_time >= restart_date, mturk_id %>% startsWith("A"))
moves$start_time <- moves$start_time %>% as.POSIXct()
moves$end_time <- moves$end_time %>% as.POSIXct()
moves$mistake <- moves$mistake %>% as.logical()
puzzles <- table_dfs$puzzle
puzzles$theme <- puzzles$theme %>% as.factor()
sections <- table_dfs$section %>% filter(start_time >= restart_date, mturk_id %>% startsWith("A"))
sections$section <- sections$section %>% as.factor()
sections$protocol <- sections$protocol %>% ordered(levels=c("none", "placebic", "actionable"))
sections$start_time <- sections$start_time %>% as.POSIXct()
sections$end_time <- sections$end_time %>% as.POSIXct()
surveys <- table_dfs$survey %>% filter(timestamp >= restart_date, mturk_id %>% startsWith("A"))
surveys$timestamp <- surveys$timestamp %>% as.POSIXct()
users <- table_dfs$user %>% filter(start_time >= restart_date, mturk_id %>% startsWith("A"))
users$experiment_completed <- users$experiment_completed %>% as.logical()
users$failed_attention_checks <- users$failed_attention_checks %>% as.logical()
users$start_time <- users$start_time %>% as.POSIXct()
users$end_time <- users$end_time %>% as.POSIXct()
users$consent <- users$consent %>% as.logical()
users$protocol <- users$protocol %>% ordered(levels=c("none", "placebic", "actionable"))
users$study_duration <- users$end_time - users$start_time
users$bonus_comp <- pmax(users$compensation - 2.5, 0)
survey_dfs <- get_survey_dfs(surveys)
demographics <- survey_dfs$demographics
demographics$age <- demographics$age %>% as.ordered()
demographics$gender <- demographics$gender %>% as.factor()
demographics$ethnicity <- demographics$ethnicity %>% as.factor()
demographics$attention.check <- demographics$attention.check %>% as.integer()
demographics$chess.skill <- demographics$chess.skill %>% ordered(levels=c("Beginner", "Intermediate", "Expert"))
final_surveys <- survey_dfs$final_survey
final_surveys$sat.outcome.1 <- final_surveys$sat.outcome.1 %>% as.integer()
final_surveys$sat.outcome.2 <- final_surveys$sat.outcome.2 %>% as.integer()
final_surveys$sat.outcome.3 <- final_surveys$sat.outcome.3 %>% as.integer()
final_surveys$sat.agent.1 <- final_surveys$sat.agent.1 %>% as.integer()
final_surveys$sat.agent.2 <- final_surveys$sat.agent.2 %>% as.integer()
final_surveys$sat.agent.3 <- final_surveys$sat.agent.3 %>% as.integer()
final_surveys$exp.power.1 <- final_surveys$exp.power.1 %>% as.integer()
final_surveys$exp.power.2 <- final_surveys$exp.power.2 %>% as.integer()
final_surveys$exp.power.3 <- final_surveys$exp.power.3 %>% as.integer()
final_surveys$attention.check.1 <- final_surveys$attention.check.1 %>% as.integer()
final_surveys$attention.check.2 <- final_surveys$attention.check.2 %>% as.integer()
feedback <- survey_dfs$feedback
names(feedback)[1] <- "text"
theme_questions <- survey_dfs$theme_question
dropped_ids <- users %>% filter(experiment_completed == F) %>% select(mturk_id) %>% unlist()
users %>% filter(mturk_id %in% c(dropped_ids))
demographics %>% filter(mturk_id %in% dropped_ids)
sections %>% filter(mturk_id %in% dropped_ids, section == "practice")
sections %>% filter(mturk_id %in% dropped_ids, section == "testing")
final_surveys %>% filter(mturk_id %in% dropped_ids) %>% select(mturk_id)
users$study_duration %>% as.double() %>% median(na.rm = T)
(users %>% inner_join(demographics, join_by(mturk_id)) %>% mutate(login.demo.duration = timestamp - start_time) %>% select(login.demo.duration) %>% unlist()/60) %>% median(na.rm = T)
(demographics %>% inner_join(sections, join_by(mturk_id)) %>% filter(section == "practice") %>% mutate(add.info = start_time - timestamp) %>% select(add.info) %>% unlist()/60) %>% as.double() %>% median(na.rm = T)
(sections %>% filter(section == "practice") %>% select(duration) %>% unlist()/60000) %>% median(na.rm = T)
(sections %>% filter(section == "testing") %>% select(duration) %>% unlist()/60000) %>% median(na.rm = T)
(sections %>% inner_join(final_surveys, join_by(mturk_id)) %>% mutate(final_survey.duration = timestamp - end_time) %>% select(final_survey.duration) %>% unlist()/60) %>% median(na.rm = T)
users %>%
select(mturk_id, completion_code, bonus_comp) %>%
filter(bonus_comp > 0) %>%
arrange(mturk_id)
users %>% filter(completion_code %>% startsWith(918))
users %>% filter(completion_code %>% startsWith("918"))
users %>% filter(completion_code >= 9180000000)
users %>% filter(completion_code == 9184421128)
users %>% filter(completion_code == 3487064172)
users %>% filter(mturk_id %>% startsWith("A2X"))
users %>% filter(mturk_id %>% startsWith("A2XR"))
users %>%
select(mturk_id, completion_code, bonus_comp) %>%
filter(bonus_comp > 0) %>%
arrange(mturk_id)
